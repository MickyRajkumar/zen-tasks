#!/usr/bin/env python3

import argparse
import sys

from commands import (
    add_task,
    complete_task,
    delete_task,
    get_completed_tasks,
    list_tasks,
    reset_database,
)
from database import init_db

sys.stdout.reconfigure(encoding="utf-8")


def main():
    init_db()
    parser = argparse.ArgumentParser(description="📝 Task MANAGER CLI")
    subparsers = parser.add_subparsers(dest="command", help="Available commands")

    add_parser = subparsers.add_parser("add", help="Add a new task")
    add_parser.add_argument("task", type=str, help="Task description")
    add_parser.add_argument(
        "--due", type=str, help="Due date (YYYY-MM-DD HH:MM)", default=None
    )

    subparsers.add_parser("list", help="List all pending tasks")

    complete_parser = subparsers.add_parser("done", help="Mark a task as completed")
    complete_parser.add_argument("task_id", type=int, help="Task ID")

    done_parser = subparsers.add_parser("completed", help="Show completed tasks")
    done_parser.add_argument(
        "filter",
        choices=["today", "yesterday", "week", "month", "year", "all"],
        help="Filter tasks by time (default: today)",
        default="today",
        nargs="?",
    )

    delete_parser = subparsers.add_parser("delete", help="Delete a task")
    delete_parser.add_argument("task_id", type=int, help="Task ID")

    subparsers.add_parser("reset", help="Reset the database (delete all tasks)")

    args = parser.parse_args()

    if args.command == "add":
        add_task(args.task, args.due)
    elif args.command == "completed":
        get_completed_tasks(args.filter)
    elif args.command == "list":
        list_tasks()
    elif args.command == "done":
        complete_task(args.task_id)
    elif args.command == "delete":
        delete_task(args.task_id)
    elif args.command == "reset":
        confirm = input(
            "⚠️ Are you sure you want to reset the database? This will delete all tasks! (yes/no): "
        )
        if confirm.lower() in ["yes", "y"]:
            reset_database()
        else:
            print("❌ Reset canceled.")

    else:
        list_tasks()


if __name__ == "__main__":
    main()
